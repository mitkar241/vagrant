# description: Bootstrap kubeadm cluster
# usage: ansible-playbook -i inventories/ubuntu/hosts playbooks/kubernetes/bootstrap-kubeadm.yml --ask-become-pass -vv
#git config --global user.email "raktimhalder241@gmail.com"
#git config --global user.name "mitkar241"
---
- name: Play to disable Firewall
  hosts: grp_cluster
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Disable firewall
      shell: "ufw disable"
      tags: [master, worker]

- name: Play to disable Swap
  hosts: grp_cluster
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Disable swap
      shell: "swapoff -a"
      tags: [master, worker]

    - name: Update fstab
      shell: "sed -i '/swap/d' /etc/fstab"
      tags: [master, worker]

- name: Play to update sysctl settings
  hosts: grp_cluster
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Update fstab
      shell: 
        cmd: |
          cat >>/etc/sysctl.d/kubernetes.conf<<EOF
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          EOF
      tags: [master, worker]

    - name: Run sysctl system
      shell: "sysctl --system"
      tags: [master, worker]

- name: Play to Install Docker
  hosts: grp_cluster
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Install required packages for Docker installation
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
      tags: [master, worker]

    - name: Add Docker PGP key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags: [master, worker]

    - name: Get short code for release
      shell: "lsb_release -cs"
      register: short_code
      tags: [master, worker]

    - name: Add Docker apt repo
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ short_code.stdout }} stable"
        state: present
      tags: [master, worker]

    - name: apt update and install packages
      apt:
        update_cache: yes
        name:
          - docker-ce=5:19.03.10~3-0~ubuntu-focal
          - containerd.io
        state: present
      tags: [master, worker]

- name: Play to Install Kubeadm
  hosts: grp_cluster
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Add GCP GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      tags: [master, worker]

    - name: Update apt source list - k8s
      shell: "echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list"
      tags: [master, worker]

    - name: apt update and install k8s packages
      apt:
        update_cache: yes
        name:
          - kubeadm=1.18.5-00
          - kubelet=1.18.5-00
          - kubectl=1.18.5-00
        state: present
      tags: [master, worker]

- name: Play to update rc.local
  hosts: master
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: mknod kmsg
      shell: "mknod /dev/kmsg c 1 11"
      ignore_errors: yes
      tags: [master]

    - name: Update rc.local
      shell: 
        cmd: |
          cat >/etc/rc.local<<EOF
          #!/bin/sh -e
          mknod /dev/kmsg c 1 11
          EOF
      tags: [master]

    - name: Change permission on rc.local file
      file:
        path: /etc/rc.local
        state: file
        owner: root
        group: root
        mode: 0755 #+x

- name: Play to initialize k8s cluster
  hosts: master
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: True
  tasks:

    # - name: What is my inventory_hostname
    #   debug: var={{inventory_hostname}}

    - name: Register ansible_host
      shell: "echo '{{ansible_host}}'"
      register: hostname

    - name: Register Management IP
      shell: "nslookup {{hostname.stdout}} | grep -i 'address' | tail -1| cut -d' ' -f2"
      register: mgmtip

    - name: Pulling kubeadm images
      shell: "kubeadm config images pull"

    - name: Initialize kubeadm
      shell: "kubeadm init --apiserver-advertise-address={{mgmtip.stdout}} --pod-network-cidr=192.168.0.0/16  --ignore-preflight-errors=all"

    - name: Deploy Calico Network
      shell: "kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml"

- name: Play to add nonsudo user with access to kubectl
  hosts: master
  become: yes
  become_method: sudo
  gather_facts: True
  vars:
    source: "{{ playbook_dir }}/script/access-kubeadm.sh"
    destination: /usr/bin
  tasks:

    - name: Copy non-sudo kubeadm script to master
      ansible.builtin.copy: 
        src:  "{{ source }}"
        dest: "{{ destination }}"
        owner: root
        group: root
        mode: '0755'

    # fails on rerun if .kube exists
    - name: Providing user access to kubectl
      shell: "/usr/bin/access-kubeadm.sh {{ ansible_user }} {{ ansible_env.HOME }}"
      ignore_errors: yes

- name: Play to get k8s cluster token
  hosts: master
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Registering k8s cluster token
      shell: "kubeadm token create --print-join-command 2>/dev/null"
      register: ktoken
      tags: [master]

- name: Play to add worker to k8s cluster
  hosts: grp_worker
  strategy: free
  become: yes
  become_method: sudo
  gather_facts: False
  tasks:

    - name: Adding worker to k8s cluster
      shell: "{{ hostvars['master']['ktoken'].stdout }}"
      when: hostvars['master']['ktoken'] is defined
      tags: [worker]

- name: Play to add nonsudo user with access to kubectl
  hosts: master
  become: yes
  become_method: sudo
  gather_facts: False
    - name: Adding worker to k8s cluster
      shell: "kubectl label nodes {{ item }} kubernetes.io/role=worker"
      with_items:
        - "control-02"
        - "control-03"
      tags: [master]
